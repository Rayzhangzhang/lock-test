{
  "name": "esbuild-plugin-license",
  "version": "1.2.2",
  "description": "esbuild plugin for generating license for your bundle",
  "main": "./dist/index.js",
  "module": "./dist/index.mjs",
  "exports": {
    "require": "./dist/index.js",
    "import": "./dist/index.mjs"
  },
  "types": "./dist/index.d.ts",
  "files": [
    "dist"
  ],
  "keywords": [
    "license",
    "esbuild"
  ],
  "author": "Yiming Li",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/upupming/esbuild-plugin-license/issues"
  },
  "homepage": "https://github.com/upupming/esbuild-plugin-license#readme",
  "devDependencies": {
    "@babel/core": "7.16.7",
    "@babel/preset-env": "7.16.11",
    "@babel/preset-typescript": "7.16.7",
    "@chialab/esbuild-plugin-commonjs": "0.14.17",
    "@types/jest": "27.4.0",
    "@types/lodash-es": "4.17.5",
    "@types/node": "17.0.9",
    "esbuild": "0.14.11",
    "jest": "27.4.7",
    "lodash": "4.17.21",
    "lodash-es": "4.17.21",
    "normalize-package-data": "3.0.3",
    "read-pkg-up": "9.0.0",
    "tsup": "5.11.11",
    "type-fest": "2.11.2",
    "typescript": "4.5.4"
  },
  "peerDependencies": {
    "esbuild": "*"
  },
  "scripts": {
    "test": "jest",
    "build": "tsup",
    "dev": "tsup --watch"
  },
  "readme": "# esbuild-plugin-license\n\n[![npm (tag)](https://img.shields.io/npm/v/esbuild-plugin-license/latest?style=flat-square)](https://www.npmjs.com/package/esbuild-plugin-license)\n![npm](https://img.shields.io/npm/dm/esbuild-plugin-license?style=flat-square)\n\nLicense generation tool similar to https://github.com/mjeanroy/rollup-plugin-license\n\n## Usage\n\n```bash\nnpm i -D esbuild-plugin-license\n```\n\n```ts\nimport * as esbuild from 'esbuild'\nimport esbuildPluginLicense from 'esbuild-plugin-license';\n\nesbuild.build({\n  entryPoints: ['index.ts'],\n  outdir: 'dist',\n  plugins: [esbuildPluginLicense()],\n  bundle: true,\n  platform: 'node'\n})\n\n```\n\n## Config\n\nExample of default config\n\n```ts\nexport const defaultOptions: DeepRequired<Options> = {\n  banner: `/*! <%= pkg.name %> v<%= pkg.version %> | <%= pkg.license %> */`,\n  thirdParty: {\n    includePrivate: false,\n    output: {\n      file: 'dependencies.txt',\n      // Template function that can be defined to customize report output\n      template(dependencies) {\n        return dependencies.map((dependency) => `${dependency.packageJson.name}:${dependency.packageJson.version} -- ${dependency.packageJson.license}`).join('\\n');\n      },\n    }\n  }\n} as const\n```\n"
}